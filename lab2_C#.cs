                                            ////////////////////////////////////////////
                                            //ЛАБОРАТОРНАЯ РАБОТА №2////////////////////
                                            //Конструкторы, полиморфизм и наследование//
                                            //Вариант №6////////////////////////////////
                                            ////////////////////////////////////////////

/*
 В рамках консольного приложения разработать класс В-наследник класса А (из лабораторной работы №1) с полем d и свойством с2. 
 Свойство с2 – результат вычисления выражения над полями a, b, d. В теле свойства использовать управляющий оператор (см. вариант в таблице 2 (if)). 
 У класса А создать конструктор, инициализирующий его поля. Для класса В определить 2 конструктора: один – наследуется от конструктора класса А, 
 второй – собственный. В теле программы создать объекты классов А и В, продемонстрировав работу всех конструкторов. Вывести значения свойства на экран. 
*/
using System;
namespace sharp2
{
    public class A
    {
        public int a, b;
        public A(int x, int y) { a = x; b = y; }
        public int c
        {
            get
            {
                return a + b;
                return a % b;
            }
        }
    }
    public class B : A
    {
        public B(int x, int y) : base(x, y) { } // аргументы x и y отправляются в род. класс
        public B(int x, int y, int z) : base(x, y) { d = z; }
        public int d;
        public int c2
        {
            get
            {
                if (a >= b)
                {
                    d = a - b;
                }
                else d = a + b;
                return d;
            }
        }
    }
    class Programm
    {
        static void Main(string[] args)
        {
            Console.Title = "Лабораторная работа №2";
            A obj1 = new A(1, 2);
            //obj1.b = obj1.c;
            Console.WriteLine("obj1.c:  {0}", obj1.c);
            B obj2 = new B(8, 8, 0);
            obj2.b = obj2.c2;
            Console.WriteLine("obj2.c2: {0}", obj2.b);
            B obj3 = new B(10, 3, 0);
            obj3.b = obj3.c2;
            Console.WriteLine("obj3.c2: {0}", obj3.b);
            Console.ReadKey();
        }
    }
}